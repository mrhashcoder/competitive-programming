//guess prime

#include<iostream>

using namespace std;
long long int sqrt(long long int v);
void function(long long int n,long long int arr[]);
long long int findno(long long int arr[],long long int temp[]);

int count = 0;

int main(){
	int t;
	cin>>t;
	while(t--){
		count = 0;
		long long int x = 46656,y;
		cout<<1<<" "<<x<<"\n";
		fflush(stdout);
		cin>>y;
		if(y == 0){
			cout<<1<<" "<<4<<"\n";
			fflush(stdout);
			cin>>y;
			if(y == 0){
				cout<<2<<" "<<2<<"\n";
				fflush(stdout);
				}
			if(y == 1){
				cout<<2<<" "<<3<<"\n";	
				fflush(stdout);
			} 
		}
		else{
			long long int arr[200],i;
			long long int var = x*x - y;
			function(var , arr);
			long long int list[count];	
			long long int ans = findno(arr,list);	
	
			cout<<1<<" "<<ans<<"\n";
			fflush(stdout);
			cin >> y;
			long long int index;
			for(i = 0 ; i < count ;i++){
				if(y == list[i]){
					index = i;
					break;
				}
			}
			cout<<2<<" "<<arr[index]<<"\n";	
			fflush(stdout);
			char str[5];
			cin>>str;			
				
		}
	}
}

void function(long long int n,long long int arr[]) 
{ 

	while (n % 2 == 0) 
	{ 
		n = n/2;
	} 


	for (long long int i = 3; i <= sqrt(n); i = i + 2) 
	{ 
	
		while (n % i == 0) 
		{ 	
			if(count == 0){
				arr[0] = i;
				count++;
			}
			else if(arr[count-1] != i){
				arr[count] = i;
				count++; 
			}
			n = n/i; 
		} 
	}
	if (n > 2){
		arr[count] = n;
		count++;
	} 		 
} 
long long int sqrt(long long int x) 
{ 

    if (x == 0 || x == 1) 
    return x; 

    long long int i = 1, result = 1; 
    while (result <= x) 
    { 
      i++; 
      result = i * i; 
    } 
    return i - 1; 
} 

long long int findno(long long int arr[],long long int temp[]){
	long long int a = sqrt(arr[count]) + 1;
	long long int i,j;
	while(1){
		for(i = 0 ; i < count ;i++){
			temp[i] = (a * a) % arr[i];
		}
		long long int flag = 1;
		
		for(i = 0 ; i < count ;i++){
			for(j = 0 ; j < count ;j++){
				if(i != j){
					if(temp[i] == temp[j])
						flag = 0;
						break;
				}
			}	
		}
		
		if(flag == 0){
			a++;			
		}
		else{
			return a; 
		}
	}
}













